

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Hajun's Dev Note</title>
  <subtitle>Hajun's development &amp; tech knowledge data warehouse</subtitle>
  <updated>2023-01-26T15:00:19+09:00</updated>
  <author>
    <name>Hajun Lee</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator>
  <rights> © 2023 Hajun Lee </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Introduction to Java (4) - 제어 흐름 이해하기</title>
    <link href="http://localhost:4000/posts/Introduction-to-Java(4)/" rel="alternate" type="text/html" title="Introduction to Java (4) - 제어 흐름 이해하기" />
    <published>2023-01-25T00:00:00+09:00</published>
  
    <updated>2023-01-25T00:02:34+09:00</updated>
  
    <id>http://localhost:4000/posts/Introduction-to-Java(4)/</id>
    <content src="http://localhost:4000/posts/Introduction-to-Java(4)/" />
    <author>
      <name>Hajun</name>
    </author>

  
    
    <category term="Introduction" />
    
    <category term="Java" />
    
  

  
    <summary>
      





      제어 흐름은 자세히 다루지 않고 키포인트만 짚고 넘어갈 것입니다. 제어 흐름은 기존에 다른 언어를 사용하신 분들에게는 익숙한 부분이고, 그만큼 앞으로 프로그래밍 하시는 동안 굉장한 높은 중요도를 가지고 있습니다. 따라서, 처음 배우시는 분들에게는 꼭 요약본이 아닌 책이나 강의를 먼저 읽어보는 것을 적극 추천드립니다.

1. 조건문

조건문이란 주어진 조건에 따라 다른 문장을 선택할 수 있도록 프로그래밍하는 것을 말합니다.

  if문, if-else문, if-else if-else문, if-if문
  조건문과 조건 연산자 –&amp;gt; max = (a &amp;gt; b) ? a : b;
  switch-case 문


2. 반복문

반복문이란, 반복 수행을 수행 할 수 있도록 프로그래밍하는 것을 말합니다.

 ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Introduction to Java (3) - 자바의 여러가지 연산자</title>
    <link href="http://localhost:4000/posts/Introduction-to-Java(3)/" rel="alternate" type="text/html" title="Introduction to Java (3) - 자바의 여러가지 연산자" />
    <published>2023-01-21T21:00:00+09:00</published>
  
    <updated>2023-01-21T21:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/Introduction-to-Java(3)/</id>
    <content src="http://localhost:4000/posts/Introduction-to-Java(3)/" />
    <author>
      <name>Hajun</name>
    </author>

  
    
    <category term="Introduction" />
    
    <category term="Java" />
    
  

  
    <summary>
      





      1. 항과 연산자

연산에 사용하는 기호를 연산자(operator)라고 합니다. 그리고 연산에 사용하는 값을 항(operand)이라고 합니다. 연산자는 항의 개수에 따라 단항 연산자, 이항 연산자, 삼항 연산자로 나눌 수 있습니다.


  단항 연산자
    
      항이 한 개인 연산자
      ex) ++num
    
  
  이항 연산자
    
      항이 두 개인 연산자
      ex) num1 + num2;
    
  
  삼항 연산자
    
      항이 세 개인 연산자
      ex) (5 &amp;gt; 3 ? 1 : 0;)
    
  


프로그램에서 사용하는 연산자는 우선순위가 있습니다. 단항 연산자가 가장 높고 이항, 삼항 연산자 순서입니다.

2. 대입 연산자

대...
    </summary>
  

  </entry>

  
  <entry>
    <title>Introduction to Java (2) - 변수와 자료형</title>
    <link href="http://localhost:4000/posts/Introduction-to-Java(2)/" rel="alternate" type="text/html" title="Introduction to Java (2) - 변수와 자료형" />
    <published>2023-01-20T03:33:00+09:00</published>
  
    <updated>2023-01-20T23:01:24+09:00</updated>
  
    <id>http://localhost:4000/posts/Introduction-to-Java(2)/</id>
    <content src="http://localhost:4000/posts/Introduction-to-Java(2)/" />
    <author>
      <name>Hajun</name>
    </author>

  
    
    <category term="Introduction" />
    
    <category term="Java" />
    
  

  
    <summary>
      





      1. 변수란?

어떠한 값을 저장하려면 저장할 공간이 필요한데, 이 공간의 이름이 바로 변수입니다.
변수를 사용하기 위해 어떤 형태의 자료를 저장할 것인지 정해야합니다. 예를 들어, 사람의 나이를 저장하려면 정수 형태를 써야 하고, 이름을 저장하려면 문자 형태를 써야합니다. 이 형태를 변수의 ‘자료형’이라고 합니다. 변수의 자료형을 선택했다면 변수의 이름도 정해줘야 합니다.

package java;

public class variable {
    public static void main(String[] args) {
        int level;      //int는 정수형, level은 변수명 = 정수형 변수 level을 선언
        level = 10;     //값 10을 Lev...
    </summary>
  

  </entry>

  
  <entry>
    <title>Introduction to Java (1) - 자바 프로그래밍 시작하기</title>
    <link href="http://localhost:4000/posts/Introduction-to-Java(1)/" rel="alternate" type="text/html" title="Introduction to Java (1) - 자바 프로그래밍 시작하기" />
    <published>2023-01-18T03:09:00+09:00</published>
  
    <updated>2023-01-18T03:14:46+09:00</updated>
  
    <id>http://localhost:4000/posts/Introduction-to-Java(1)/</id>
    <content src="http://localhost:4000/posts/Introduction-to-Java(1)/" />
    <author>
      <name>Hajun</name>
    </author>

  
    
    <category term="Introduction" />
    
    <category term="Java" />
    
  

  
    <summary>
      





      1. 프로그래밍이란?

프로그래밍을 한다는 것은 컴퓨터가 일을 하도록 컴퓨터 언어로 명령을 만들고 컴퓨터로 하여금 그 명령을 실행하게 하는 것을 말합니다. 프로그램이 프로그래밍 언어 문법에 잘 맞는지 확인하고, 컴퓨터가 이해할 수 있는 언어로 번역을 해야하는데, 이 작업을 컴파일(Compile)이라고 하며, 컴파일 작업을 하는 프로그램을 컴파일러(Compiler)라고 합니다.

2. 왜 자바를 써야하는가?

자바는 1991년 제임스 고슬링을 비롯한 선 마이크로시스템스 연구원들이 처음 개발했습니다. 이때, 가전제품이나 휴대용 장치 등에 사용하는 소프트웨어를 만들기 위해 독립적으로 작동하는 더 안정된 프로그래밍 언어가 필요했습니다.

3. 자바의 장점?

1. 플랫폼에 영향을 받지 않으므로 다양한 환경에서...
    </summary>
  

  </entry>

</feed>


